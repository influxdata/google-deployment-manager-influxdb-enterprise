{% set project = env['project'] %}
{% set deployment = env['deployment'] %}
{% set zone = properties['zone'] %}
{% set region = zone[:-2] %}
{% set network = properties['network'] %}
{% set subnetwork = properties['subnetwork'] %}
{% set regionalNetwork = properties['regionalNetwork'] %}
{% set targetSize = properties['targetSize'] %}
{% set machineType = properties['machineType'] %}
{% set diskType = properties['influxdbDiskType'] %}
{% set diskSize = properties['influxdbDiskSizeGb'] %}
{% set bootDiskType = properties['bootDiskType'] %}
{% set bootDiskSize = properties['bootDiskSizeGb'] %}
{% set sourceImageName = properties['sourceImageName'] %}
{% set sourceImageProject = properties['sourceImageProject'] %}
{% set adminUser = properties['adminUser'] %}
{% set adminPassword = properties['adminPassword'] %}


resources:
# Instance template for meta nodes
# Used by the meta node instance group manager
- name: {{ deployment }}-meta-it
  type: compute.v1.instanceTemplate
  properties:
    zone: {{ zone }}
    properties:
      machineType: {{ machineType }}
      networkInterfaces:
        - network: https://www.googleapis.com/compute/v1/projects/{{ project }}/global/networks/{{ network }}
          {% if subnetwork %}
          subnetwork: https://www.googleapis.com/compute/v1/projects/{{ project }}/regions/{{ region }}/subnetworks/{{ subnetwork }}
          {% endif %}
          accessConfigs:
          - name: External-IP
            type: ONE_TO_ONE_NAT
      disks:
      - deviceName: boot
        type: PERSISTENT
        boot: True
        initializeParams:
          sourceImage: https://www.googleapis.com/compute/v1/projects/{{ sourceImageProject }}/global/images/{{ sourceImageName }}
          diskType: {{ bootDiskType }}
          diskSizeGb: {{ bootDiskSize }}
      - deviceName: influxdb
        type: PERSISTENT
        autoDelete: False
        initializeParams:
          diskType: {{ diskType }}
          diskSizeGb: {{ diskSize }}
      tags:
        items:
          - {{ deployment }}-meta-fw
      metadata:
        items:
        - key: deployment
          value: {{ deployment }}
        {% if properties['licenseKey'] %}
        - key: license-key
          value: {{ properties['licenseKey'] }}
        {% endif %}
        - key: rtc-name
          value: {{ deployment }}-rtc
        - key: admin-user
          value: {{ adminUser }}
        - key: admin-password
          value: {{ adminPassword }}
        - key: startup-script
          value: |
            #!/bin/bash
            set -euxo pipefail
            {% for script in properties['startupScripts'] %}
            {{ imports[script]|indent(12) }}
            {% endfor %}
      serviceAccounts:
        - email: default
          scopes:
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'

- name: {{ deployment }}-meta-igm
  type: compute.v1.instanceGroupManager
  metadata:
    dependsOn:
      - {{ deployment }}-meta-it
      - {{ deployment }}-rtc
  properties:
    baseInstanceName: {{ deployment }}-meta-vm
    instanceTemplate: $(ref.{{ deployment }}-meta-it.selfLink)
    targetSize: {{ targetSize }}
    zone: {{ zone }}
    namedPorts:
      - name: 'tcp'
        port: 8091
    statefulPolicy:
      preservedState:
        disks:
          boot:
            autoDelete: ON_PERMANENT_INSTANCE_DELETION
          influxdb:
            autoDelete: NEVER
    updatePolicy:
      type: OPPORTUNISTIC
      replacementMethod: RECREATE
      {% if regionalNetwork %}
      instanceRedistributionType: NONE
      {% endif %}
      maxUnavailable:
        fixed: 1
      maxSurge:
        fixed: 0

outputs:
- name: group
  value: $(ref.{{ deployment }}-meta-igm.instanceGroup)